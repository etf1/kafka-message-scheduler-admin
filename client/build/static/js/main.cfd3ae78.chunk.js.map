{"version":3,"sources":["_core/router/routes.ts","_core/app/App.module.css","_core/service/config.ts","_common/service/ApiUtil.ts","_common/service/FunUtil.ts","_core/i18n/index.ts","_core/app/app-left-sidebar/AppLeftSidebar.module.css","_core/app/app-navbar/AppNavbar.module.css","_common/type/utils.ts","_core/app/app-navbar/AppNavbar.tsx","_core/app/app-left-sidebar/AppLeftSidebar.tsx","_core/app/App.tsx","index.tsx"],"names":["Home","lazy","About","Schedulers","SchedulesLive","SchedulesAll","ScheduleDetail","ROUTE_HOME","ROUTE_SCHEDULE_LIVE_DETAIL","ROUTE_SCHEDULE_ALL_DETAIL","resolvePath","path","variables","indexOf","Object","keys","forEach","key","replaceAll","routes","component","exact","module","exports","apiRoot","schedulersUrl","schedulesUrl","scheduleDetailUrl","liveSchedulesUrl","liveScheduleDetailUrl","a","get","response","getApiRoot","undefined","getSchedulersUrl","getSchedulesUrl","schedulerName","replace","getScheduleDetailUrl","id","getLiveSchedulesUrl","getLiveScheduleDetailUrl","init","HEADER_APP_JSON","Accept","SERVER_ERR_MSG","url","header","fetch","method","headers","status","Error","json","str","toFind","toReplace","RegExp","slsx","args","reduce","accumulator","currentValue","isDictionary","validObject","filter","k","obj","isString","parts","split","isFunction","getDateLocale","localStorage","getItem","fr","enUS","enGB","i18n","use","Backend","LanguageDetector","initReactI18next","fallbackLng","debug","interpolation","escapeValue","value","isNumber","isPrimitive","Boolean","isBoolean","isArray","Array","sameKey","keyField","d","AppNavbar","t","useTranslation","useState","isOpen","setIsOpen","className","clsx","Styles","Nav","role","NavbarMenu","aria-label","aria-expanded","data-target","onClick","aria-hidden","Brand","NavbarLink","href","BrandTitle","style","color","target","rel","AppLeftSidebar","pathname","window","location","Style","Container","data-key","to","MenuItem","MenuItemSelected","data-tooltip","App","map","route","AppContainer","fallback","then","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfd3ae78.chunk.js","sourcesContent":["import { Dictionary } from \"./../../_common/type/utils\";\nimport { replaceAll } from \"_common/service/FunUtil\";\nimport { lazy } from \"react\";\n\nconst Home = lazy(() => import(\"business/page/Home\"));\nconst About = lazy(() => import(\"business/about/About\"));\nconst Schedulers = lazy(() => import(\"business/page/Schedulers\"));\nconst SchedulesLive = lazy(() => import(\"business/page/SchedulesLive\"));\nconst SchedulesAll = lazy(() => import(\"business/page/SchedulesAll\"));\nconst ScheduleDetail = lazy(() => import(\"business/page/ScheduleDetail\"));\nconst ScheduleDetailLive = lazy(() => import(\"business/page/ScheduleDetailLive\"));\nexport type RouteConfig = {\n  path: string;\n  key: string;\n  component: React.LazyExoticComponent<() => JSX.Element>;\n  exact: boolean;\n};\n\nexport const ROUTE_HOME = \"/\";\nexport const ROUTE_ABOUT = \"/about\";\nexport const ROUTE_SCHEDULERS = \"/schedulers\";\nexport const ROUTE_LIVE_SCHEDULES = \"/live\";\nexport const ROUTE_ALL_SCHEDULES = \"/all\";\nexport const ROUTE_SCHEDULE_DETAIL = \"/detail/:schedulerName/:scheduleId\";\nexport const ROUTE_SCHEDULE_LIVE_DETAIL = \"/live/detail/:schedulerName/:scheduleId\";\nexport const ROUTE_SCHEDULE_ALL_DETAIL = \"/all/detail/:schedulerName/:scheduleId\";\n\nexport const resolvePath = (path: string, variables: Dictionary) => {\n  if (path.indexOf(\":\") > -1) {\n    Object.keys(variables).forEach((key) => {\n      path = replaceAll(path, \":\" + key, variables[key]);\n    });\n  }\n  return path;\n};\n\nconst routes: RouteConfig[] = [\n  {\n    path: ROUTE_ABOUT,\n    key: \"about\",\n    component: About,\n    exact: true,\n  },\n  {\n    path: ROUTE_SCHEDULERS,\n    key: \"schedulers\",\n    component: Schedulers,\n    exact: true,\n  },\n  {\n    path: ROUTE_LIVE_SCHEDULES,\n    key: \"live\",\n    component: SchedulesLive,\n    exact: true,\n  },\n  {\n    path: ROUTE_ALL_SCHEDULES,\n    key: \"all\",\n    component: SchedulesAll,\n    exact: true,\n  },\n  {\n    path: ROUTE_SCHEDULE_DETAIL,\n    key: \"schedule\",\n    component: ScheduleDetail,\n    exact: true,\n  },\n  {\n    path: ROUTE_SCHEDULE_LIVE_DETAIL,\n    key: \"schedule\",\n    component: ScheduleDetailLive,\n    exact: true,\n  },\n  {\n    path: ROUTE_SCHEDULE_ALL_DETAIL,\n    key: \"schedule\",\n    component: ScheduleDetail,\n    exact: true,\n  },\n  {\n    path: ROUTE_HOME,\n    key: \"home\",\n    component: Home,\n    exact: false,\n  },\n];\n\nexport default routes;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3ZTxG\",\"AppContainer\":\"App_AppContainer__1v91Q\"};","import { get } from \"_common/service/ApiUtil\";\n\nlet apiRoot = \"\";\nlet schedulersUrl = \"\";\nlet schedulesUrl = \"\";\nlet scheduleDetailUrl = \"\";\nlet liveSchedulesUrl = \"\";\nlet liveScheduleDetailUrl = \"\";\n\nasync function init() {\n  const response = await get(\"/configuration.json\");\n  apiRoot = response[\"api-root\"];\n  schedulersUrl = response[\"schedulers\"];\n  schedulesUrl = response[\"schedules\"];\n  scheduleDetailUrl = response[\"schedule-detail\"];\n  liveSchedulesUrl = response[\"live-schedules\"];\n  liveScheduleDetailUrl = response[\"live-schedule-detail\"];\n}\nexport function getApiRoot() {\n  if (apiRoot === null || apiRoot === undefined) {\n    return \"\";\n    //throw new Error (\"Error, configuration is not initialized, 'init()' function should be executed and terminated before any other calls.\");\n  }\n  return apiRoot;\n}\nexport function getSchedulersUrl() {\n  return getApiRoot()+schedulersUrl;\n}\nexport function getSchedulesUrl(schedulerName: string) {\n  return getApiRoot()+schedulesUrl.replace(\"{name}\", schedulerName);\n}\nexport function getScheduleDetailUrl(schedulerName: string, id: string) {\n  return getApiRoot()+scheduleDetailUrl.replace(\"{name}\", schedulerName).replace(\"{id}\", id);\n}\nexport function getLiveSchedulesUrl(schedulerName: string) {\n  return getApiRoot()+liveSchedulesUrl.replace(\"{name}\", schedulerName);\n}\nexport function getLiveScheduleDetailUrl(schedulerName: string, id: string) {\n  return getApiRoot()+liveScheduleDetailUrl.replace(\"{name}\", schedulerName).replace(\"{id}\", id);\n}\n\nexport default init;\n","const HEADER_APP_JSON = {\n  \"Content-Type\": \"application/json\",\n  Accept: \"application/json\",\n};\n\nconst SERVER_ERR_MSG = \"Bad response from server\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const post = async <T = any>(\n  url: string,\n  body: string,\n  header?: HeadersInit\n): Promise<T> => {\n  const response = await fetch(url, {\n    method: \"POST\",\n    body: body,\n    headers: header || HEADER_APP_JSON,\n  });\n\n  if (response.status >= 400) {\n    throw new Error(SERVER_ERR_MSG);\n  }\n  return response.json();\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const get = async <T = any>(\n  url: string,\n  header?: HeadersInit\n): Promise<T> => {\n  const response = await fetch(url, {\n    method: \"GET\",\n    headers: header || HEADER_APP_JSON,\n  });\n  if (response.status >= 400) {\n    throw new Error(SERVER_ERR_MSG);\n  }\n  return response.json();\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const del = async <T = any>(\n  url: string,\n  header?: HeadersInit\n): Promise<T> => {\n  const response = await fetch(url, {\n    method: \"DELETE\",\n    headers: header || HEADER_APP_JSON,\n  });\n  if (response.status >= 400) {\n    throw new Error(SERVER_ERR_MSG);\n  }\n  return response.json();\n};\n","import { Dictionary, isDictionary, isFunction, isString } from \"_common/type/utils\";\n\nexport function escapeRegExp(s: string): string {\n  return s.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, \"\\\\$1\");\n}\n\nexport function replaceAll(\n  str: string,\n  toFind: string,\n  toReplace: string\n): string {\n  return str.replace(new RegExp(escapeRegExp(toFind), \"g\"), toReplace);\n}\n\nexport const later = async (duration: number) =>\n  new Promise((resolve) => setTimeout(resolve, duration));\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function slsx(...args: any[]): Record<string, unknown> {\n  if (args) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return args.reduce((accumulator: any, currentValue: any) => {\n      if (currentValue === undefined || currentValue === null) {\n        return accumulator;\n      }\n      if (isDictionary(currentValue)) {\n        const validObject = Object.keys(currentValue)\n          .filter(\n            (k) => currentValue[k] !== null && currentValue[k] !== undefined\n          )\n          .reduce((obj, key) => {\n            obj[key] = currentValue[key];\n            return obj as Dictionary;\n          }, {} as Dictionary);\n\n        return { ...accumulator, ...validObject };\n      } else if (isString(currentValue)) {\n        const parts = currentValue.split(\":\", 1);\n        accumulator[parts[0]] = parts[1];\n        return accumulator;\n      } else if (isFunction(currentValue)) {\n        return { ...accumulator, ...slsx(currentValue()) };\n      } else {\n        return accumulator;\n      }\n    }, {});\n  } else {\n    return {};\n  }\n}\n","import i18n, { TFunction } from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport Backend from \"i18next-http-backend\";\nimport { isNumber } from \"_common/type/utils\";\n\nimport { Locale } from \"date-fns\";\nimport { fr, enGB, enUS } from \"date-fns/locale\";\n\n// don't want to use this?\n// have a look at the Quick start guide\n// for passing in lng and translations on init\n\ni18n\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-http-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: \"en\",\n    debug: false,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n  });\n\nfunction hasLength(value: any): value is { length: number } {\n  return isNumber(value?.length);\n}\n\nexport function pluralizeIf(\n  count: number | undefined | { length: number },\n  label: string,\n  labels: string | undefined,\n  t?: TFunction\n) {\n  const nb = hasLength(count) ? count.length : count;\n  if (nb === undefined || nb === 0 || nb === 1 || labels === undefined) {\n    return t ? t(label) : label;\n  }\n  return t ? t(labels) : labels;\n}\n\nexport function getShortLanguageFromLS(): string | null {\n  const locale = localStorage.getItem(\"i18nextLng\");\n  if (locale) {\n    return locale;\n  }\n  return null;\n}\nexport function changeLanguage(\n  lng: \"en-US\" | \"fr-FR\" | string,\n  callback?: ((error: any, t: TFunction) => void) | undefined\n): Promise<TFunction> {\n  return i18n.changeLanguage(lng, callback);\n}\n\n/**\n * Return language namespace from date-fns\n * @category core\n * @subcategory internationalization\n * @returns {Locale} Namespace of date-fns package for a language. By default returns english.\n */\nexport function getDateLocale(): Locale {\n  const language = getShortLanguageFromLS();\n\n  switch (language) {\n    case \"fr-FR\":\n      return fr;\n    case \"en-US\":\n      return enUS;\n    default:\n      return enGB;\n  }\n}\nexport default i18n;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"AppLeftSidebar_Container__RUNhc\",\"MenuItem\":\"AppLeftSidebar_MenuItem__1stkD\",\"MenuItemSelected\":\"AppLeftSidebar_MenuItemSelected__YQTQS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"AppNavbar_Nav__3L3Mk\",\"Corner\":\"AppNavbar_Corner__2qGim\",\"Brand\":\"AppNavbar_Brand__229Df\",\"BrandTitle\":\"AppNavbar_BrandTitle__1EHeg\",\"NavbarMenu\":\"AppNavbar_NavbarMenu__1qLDQ\",\"NavbarLink\":\"AppNavbar_NavbarLink__1RfQr\",\"NavbarDropdown\":\"AppNavbar_NavbarDropdown__2bIh1\"};","/**\n * Dictionary of string, value pairs\n */\nexport type Dictionary<T = any> = { [key: string]: T };\n\nexport type SetStateAction<S> = S | ((prevState: S) => S);\n\nexport function isFunction(value: any): value is Function {\n  return typeof value === \"function\";\n}\nexport function isString(value: any): value is string {\n  return typeof value === \"string\";\n}\nexport function isNumber(value: any): value is number {\n  return typeof value === \"number\";\n}\nexport function isBoolean(value: any): value is boolean {\n  return (\n    typeof value === \"boolean\" || value instanceof Boolean || value === Boolean\n  );\n}\nexport function isPrimitive(value: any): value is number | string | boolean {\n  return isString(value) || isNumber(value) || isBoolean(value);\n}\nfunction isObject(value: any): value is object {\n  return value !== null && typeof value === \"object\";\n}\nexport function isDictionary<T = any>(value: any): value is Dictionary<T> {\n  return value !== null && typeof value === \"object\";\n}\nconst objectToString = (o: any): string => Object.prototype.toString.call(o);\n\nexport function isDate(value: any): value is Date {\n  return isObject(value) && objectToString(value) === \"[object Date]\";\n}\nexport function isArray<T>(value: any): value is Array<T> {\n  return Array.isArray(value);\n}\nexport function isError(value: any): value is Error {\n  return (\n    isObject(value) &&\n    (objectToString(value) === \"[object Error]\" || value instanceof Error)\n  );\n}\n\nexport function deduplicate<T>(a: T[]): T[] {\n  return a.filter((value, index, self) => {\n    return self.indexOf(value) === index;\n  });\n}\n\nexport function omit<T = any>(\n  value: T,\n  a: T[],\n  predicat?: (a: T, b: T) => boolean\n): T[] {\n  if (predicat) {\n    return a.filter((v) => {\n      return !predicat(v, value);\n    });\n  } else {\n    return a.filter((v) => {\n      return v !== value;\n    });\n  }\n}\n\nexport const nop = () => {};\n\nexport type ValueOrFunction<T> = T | ((...args: any[]) => T);\n\nexport function getValueOrFunctionValue<T>(\n  v: ValueOrFunction<T>,\n  ...args: any[]\n) {\n  if (isFunction(v)) {\n    return v(...args) as T;\n  } else {\n    return v;\n  }\n}\n\n/**\n * @name sameKey\n *\n * Retourne un prédicat qui permet de savoir si une primitive est égale à une valeur donnée ou bien\n * si un champ d'un objet est égale à une valeur donnée.\n *\n * @param keyField Le nom du champ de l'objet\n * @param key la valeur de la clé à comparer\n * @returns Un prédicat qui, pour un objet de type T ou une primitive de type T, permet de savoir s'il est égal ou non à la clé donnée.\n */\n export function sameKey<T>(keyField: string, key: string) {\n  return (d: T) =>\n    isPrimitive(d)\n      ? d === key\n      : isDictionary<string>(d)\n      ? d[keyField] === key\n      : false;\n}\n","import clsx from \"clsx\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport {\n  ROUTE_ALL_SCHEDULES,\n  ROUTE_HOME,\n  ROUTE_LIVE_SCHEDULES,\n} from \"_core/router/routes\";\nimport Styles from \"./AppNavbar.module.css\";\n\nconst AppNavbar = () => {\n  const { t } = useTranslation();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleBurgerClick = () => setIsOpen((isOpen) => !isOpen);\n\n  return (\n    <nav className={clsx(\"navbar\", Styles.Nav )}>\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <span\n            role=\"button\"\n            className={clsx(\n              \"navbar-burger burger white\",\n              isOpen ? \"is-active\" : null, \n              Styles.NavbarMenu\n            )}\n            aria-label=\"menu\"\n            aria-expanded=\"false\"\n            data-target=\"navbarMenu\"\n            onClick={handleBurgerClick}\n          >\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </span>\n        </div>\n        <div\n          id=\"navbarMenu\"\n          className={clsx(\n            \"navbar-menu\",\n            Styles.NavbarMenu,\n            isOpen ? \"is-active\" : null\n          )}\n        >\n          <div className=\"navbar-start\">\n            <span className={clsx(\"navbar-item\", Styles.Brand)}>\n              <a className={clsx(\"button is-white\",Styles.NavbarLink)} href={ROUTE_HOME}>\n              \n                <span className={Styles.BrandTitle}><span style={{color:\"#00b89c\"}}>K</span>afka Scheduler</span> \n              </a>\n            </span>\n          </div>\n          <div className=\"navbar-end\">\n            \n            <span className={clsx(\"navbar-item\")}>\n              <a\n                className={clsx(\"button is-white is-outlined\", Styles.NavbarLink)}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href=\"https://github.com/etf1/kafka-message-scheduler-admin\"\n                style={{color:\"gray\"}}\n              >\n                <span className=\"icon\">\n                  <i className=\"fab fa-github\"></i>\n                </span>\n                <span>{t(\"Menu-Source\")}</span>\n              </a>\n            </span>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default AppNavbar;\n","import clsx from \"clsx\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport Style from \"./AppLeftSidebar.module.css\";\n\nconst AppLeftSidebar = () => {\n  const { t } = useTranslation();\n  const pathname = window.location.pathname;\n\n  return (\n    <div className={clsx(\"menu\", Style.Container)}>\n      <Link data-key=\"menu-item\" to=\"/home\">\n        <div className={clsx(Style.MenuItem, pathname === \"/\" ? Style.MenuItemSelected : null)}>\n          <span className=\"icon has-tooltip-right\" data-tooltip={t(\"Menu-home\")}>\n            <i className=\"fa fa-home fas fa-lg\"></i>\n          </span>\n        </div>\n      </Link>\n\n      <Link data-key=\"menu-item\" to=\"/schedulers\">\n        <div className={clsx(Style.MenuItem, pathname === \"/schedulers\" ? Style.MenuItemSelected : null)}>\n          <span className=\"icon has-tooltip-right\" data-tooltip={t(\"Menu-schedulers\")}>\n            <i className=\"fa fa-stopwatch fas fa-lg\"></i>\n          </span>\n        </div>\n      </Link>\n \n      <Link data-key=\"menu-item\" to=\"/live\">\n        <div className={clsx(Style.MenuItem, pathname === \"/live\" ? Style.MenuItemSelected : null)}>\n          <span className=\"icon has-tooltip-right\" data-tooltip={t(\"Menu-schedules-live\")}>\n            <i className=\"fa fa-calendar fas fa-lg\"></i>\n          </span>\n        </div>\n      </Link>\n\n      <Link data-key=\"menu-item\" to=\"/all\">\n        <div className={clsx(Style.MenuItem, pathname === \"/all\" ? Style.MenuItemSelected : null)}>\n          <span className=\"icon has-tooltip-right\" data-tooltip={t(\"Menu-schedules-all\")}>\n            <i className=\"fa fa-calendar-alt fas fa-lg\"></i>\n          </span>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default AppLeftSidebar;\n/*\n\"Menu-home\": \"Accueil\",\n  \"Menu-bout\": \"A propos\",\n  \"Menu-schedules-all\": \"Toutes les planifications\",\n  \"Menu-schedules-live\": \"Planifications actives\",\n*/","import React, { Suspense } from \"react\";\nimport Styles from \"./App.module.css\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport routes from \"../router/routes\";\nimport AppNavbar from \"./app-navbar/AppNavbar\";\nimport AppLeftSidebar from \"./app-left-sidebar/AppLeftSidebar\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className={Styles.App}>\n        <Switch>\n          {routes.map((route) => {\n            return (\n              <Route key={route.key} exact={route.exact} path={route.path}>\n                <AppLeftSidebar />\n                <AppNavbar />\n                <div className={Styles.AppContainer}>\n                  {\" \"}\n                  <Suspense fallback={<div></div>}>\n                    <route.component />\n                  </Suspense>\n                </div>\n              </Route>\n            );\n          })}\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// These must be the first lines in src/index.js\nimport \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\n\nimport React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bulma/css/bulma.css\";\nimport \"./bulma-tooltip.css\";\nimport \"./index.css\";\nimport App from \"_core/app/App\";\n\nimport \"_core/i18n\";\n\nimport init from \"_core/service/config\";\n\ninit().then(() => {\n  /*if (process.env.NODE_ENV === \"development\") {\n    const { worker } = require(\"./mocks/browser\");\n    worker.start();\n  }*/\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <Suspense fallback={<div></div>}>\n        <App />\n      </Suspense>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n});\n"],"sourceRoot":""}