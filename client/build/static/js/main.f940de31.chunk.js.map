{"version":3,"sources":["_core/app/app-navbar/AppNavbar.module.css","_core/service/config.ts","_common/service/ApiUtil.ts","_core/i18n/index.ts","_common/service/FunUtil.ts","_core/router/routes.ts","_core/app/app-navbar/AppNavbar.tsx","_core/app/App.tsx","index.tsx"],"names":["module","exports","apiRoot","schedulersUrl","schedulesUrl","scheduleDetailUrl","liveSchedulesUrl","liveScheduleDetailUrl","a","get","response","getApiRoot","undefined","getSchedulersUrl","getSchedulesUrl","schedulerName","replace","getScheduleDetailUrl","id","getLiveSchedulesUrl","getLiveScheduleDetailUrl","init","HEADER_APP_JSON","Accept","SERVER_ERR_MSG","url","header","fetch","method","headers","status","Error","json","getDateLocale","localStorage","getItem","fr","enUS","enGB","i18n","use","Backend","LanguageDetector","initReactI18next","fallbackLng","debug","interpolation","escapeValue","Home","lazy","About","SchedulesLive","SchedulesAll","ScheduleDetail","ROUTE_HOME","ROUTE_LIVE_SCHEDULES","ROUTE_ALL_SCHEDULES","ROUTE_SCHEDULE_LIVE_DETAIL","ROUTE_SCHEDULE_ALL_DETAIL","resolvePath","path","variables","indexOf","Object","keys","forEach","key","str","toFind","toReplace","RegExp","routes","component","exact","AppNavbar","t","useTranslation","useState","isOpen","setIsOpen","className","clsx","Styles","Navbar","role","aria-label","aria-expanded","data-target","onClick","aria-hidden","NavbarMenu","href","to","target","rel","App","map","route","fallback","then","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f940de31.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"AppNavbar_Navbar__3TBvG\",\"NavbarMenu\":\"AppNavbar_NavbarMenu__1qLDQ\"};","import { get } from \"_common/service/ApiUtil\";\n\nlet apiRoot = \"\";\nlet schedulersUrl = \"\";\nlet schedulesUrl = \"\";\nlet scheduleDetailUrl = \"\";\nlet liveSchedulesUrl = \"\";\nlet liveScheduleDetailUrl = \"\";\n\nasync function init() {\n  const response = await get(\"/configuration.json\");\n  apiRoot = response[\"api-root\"];\n  schedulersUrl = response[\"schedulers\"];\n  schedulesUrl = response[\"schedules\"];\n  scheduleDetailUrl = response[\"schedule-detail\"];\n  liveSchedulesUrl = response[\"live-schedules\"];\n  liveScheduleDetailUrl = response[\"live-schedule-detail\"];\n}\nexport function getApiRoot() {\n  if (apiRoot === null || apiRoot === undefined) {\n    return \"\";\n    //throw new Error (\"Error, configuration is not initialized, 'init()' function should be executed and terminated before any other calls.\");\n  }\n  return apiRoot;\n}\nexport function getSchedulersUrl() {\n  return getApiRoot()+schedulersUrl;\n}\nexport function getSchedulesUrl(schedulerName: string) {\n  return getApiRoot()+schedulesUrl.replace(\"{name}\", schedulerName);\n}\nexport function getScheduleDetailUrl(schedulerName: string, id: string) {\n  return getApiRoot()+scheduleDetailUrl.replace(\"{name}\", schedulerName).replace(\"{id}\", id);\n}\nexport function getLiveSchedulesUrl(schedulerName: string) {\n  return getApiRoot()+liveSchedulesUrl.replace(\"{name}\", schedulerName);\n}\nexport function getLiveScheduleDetailUrl(schedulerName: string, id: string) {\n  return getApiRoot()+liveScheduleDetailUrl.replace(\"{name}\", schedulerName).replace(\"{id}\", id);\n}\n\nexport default init;\n","const HEADER_APP_JSON = {\n  \"Content-Type\": \"application/json\",\n  Accept: \"application/json\",\n};\n\nconst SERVER_ERR_MSG = \"Bad response from server\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const post = async <T = any>(\n  url: string,\n  body: string,\n  header?: HeadersInit\n): Promise<T> => {\n  const response = await fetch(url, {\n    method: \"POST\",\n    body: body,\n    headers: header || HEADER_APP_JSON,\n  });\n\n  if (response.status >= 400) {\n    throw new Error(SERVER_ERR_MSG);\n  }\n  return response.json();\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const get = async <T = any>(\n  url: string,\n  header?: HeadersInit\n): Promise<T> => {\n  const response = await fetch(url, {\n    method: \"GET\",\n    headers: header || HEADER_APP_JSON,\n  });\n  if (response.status >= 400) {\n    throw new Error(SERVER_ERR_MSG);\n  }\n  return response.json();\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const del = async <T = any>(\n  url: string,\n  header?: HeadersInit\n): Promise<T> => {\n  const response = await fetch(url, {\n    method: \"DELETE\",\n    headers: header || HEADER_APP_JSON,\n  });\n  if (response.status >= 400) {\n    throw new Error(SERVER_ERR_MSG);\n  }\n  return response.json();\n};\n","import i18n, { TFunction } from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport Backend from \"i18next-http-backend\";\nimport { isNumber } from \"_common/type/utils\";\n\nimport { Locale } from \"date-fns\";\nimport { fr, enGB, enUS } from \"date-fns/locale\";\n\n// don't want to use this?\n// have a look at the Quick start guide\n// for passing in lng and translations on init\n\ni18n\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-http-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: \"en\",\n    debug: false,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n  });\n\nfunction hasLength(value: any): value is { length: number } {\n  return isNumber(value?.length);\n}\n\nexport function pluralizeIf(\n  count: number | undefined | { length: number },\n  label: string,\n  labels: string | undefined,\n  t?: TFunction\n) {\n  const nb = hasLength(count) ? count.length : count;\n  if (nb === undefined || nb === 0 || nb === 1 || labels === undefined) {\n    return t ? t(label) : label;\n  }\n  return t ? t(labels) : labels;\n}\n\nexport function getShortLanguageFromLS(): string | null {\n  const locale = localStorage.getItem(\"i18nextLng\");\n  if (locale) {\n    return locale;\n  }\n  return null;\n}\nexport function changeLanguage(\n  lng: \"en-US\" | \"fr-FR\" | string,\n  callback?: ((error: any, t: TFunction) => void) | undefined\n): Promise<TFunction> {\n  return i18n.changeLanguage(lng, callback);\n}\n\n/**\n * Return language namespace from date-fns\n * @category core\n * @subcategory internationalization\n * @returns {Locale} Namespace of date-fns package for a language. By default returns english.\n */\nexport function getDateLocale(): Locale {\n  const language = getShortLanguageFromLS();\n\n  switch (language) {\n    case \"fr-FR\":\n      return fr;\n    case \"en-US\":\n      return enUS;\n    default:\n      return enGB;\n  }\n}\nexport default i18n;\n","export function escapeRegExp(s: string): string {\n  return s.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, \"\\\\$1\");\n}\n\nexport function replaceAll(\n  str: string,\n  toFind: string,\n  toReplace: string\n): string {\n  return str.replace(new RegExp(escapeRegExp(toFind), \"g\"), toReplace);\n}\n\nexport const later = async (duration: number) =>\n  new Promise((resolve) => setTimeout(resolve, duration));\n","import { Dictionary } from \"./../../_common/type/utils\";\nimport { replaceAll } from \"_common/service/FunUtil\";\nimport { lazy } from \"react\";\n\nconst Home = lazy(() => import(\"business/page/Home\"));\nconst About = lazy(() => import(\"business/about/About\"));\n\nconst SchedulesLive = lazy(() => import(\"business/page/SchedulesLive\"));\nconst SchedulesAll = lazy(() => import(\"business/page/SchedulesAll\"));\nconst ScheduleDetail = lazy(() => import(\"business/page/ScheduleDetail\"));\nconst ScheduleDetailLive = lazy(() => import(\"business/page/ScheduleDetailLive\"));\nexport type RouteConfig = {\n  path: string;\n  key: string;\n  component: React.LazyExoticComponent<() => JSX.Element>;\n  exact: boolean;\n};\n\nexport const ROUTE_HOME = \"/\";\nexport const ROUTE_ABOUT = \"/about\";\nexport const ROUTE_LIVE_SCHEDULES = \"/live\";\nexport const ROUTE_ALL_SCHEDULES = \"/all\";\nexport const ROUTE_SCHEDULE_DETAIL = \"/detail/:schedulerName/:scheduleId\";\nexport const ROUTE_SCHEDULE_LIVE_DETAIL = \"/live/detail/:schedulerName/:scheduleId\";\nexport const ROUTE_SCHEDULE_ALL_DETAIL = \"/all/detail/:schedulerName/:scheduleId\";\n\nexport const resolvePath = (path: string, variables: Dictionary) => {\n  if (path.indexOf(\":\") > -1) {\n    Object.keys(variables).forEach((key) => {\n      path = replaceAll(path, \":\" + key, variables[key]);\n    });\n  }\n  return path;\n};\n\nconst routes: RouteConfig[] = [\n  {\n    path: ROUTE_ABOUT,\n    key: \"about\",\n    component: About,\n    exact: true,\n  },\n  {\n    path: ROUTE_LIVE_SCHEDULES,\n    key: \"live\",\n    component: SchedulesLive,\n    exact: true,\n  },\n  {\n    path: ROUTE_ALL_SCHEDULES,\n    key: \"all\",\n    component: SchedulesAll,\n    exact: true,\n  },\n  {\n    path: ROUTE_SCHEDULE_DETAIL,\n    key: \"schedule\",\n    component: ScheduleDetail,\n    exact: true,\n  },\n  {\n    path: ROUTE_SCHEDULE_LIVE_DETAIL,\n    key: \"schedule\",\n    component: ScheduleDetailLive,\n    exact: true,\n  },\n  {\n    path: ROUTE_SCHEDULE_ALL_DETAIL,\n    key: \"schedule\",\n    component: ScheduleDetail,\n    exact: true,\n  },\n  {\n    path: ROUTE_HOME,\n    key: \"home\",\n    component: Home,\n    exact: false,\n  },\n];\n\nexport default routes;\n","import clsx from \"clsx\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport {\n  ROUTE_ALL_SCHEDULES,\n  ROUTE_HOME,\n  ROUTE_LIVE_SCHEDULES,\n} from \"_core/router/routes\";\nimport Styles from \"./AppNavbar.module.css\";\n\nconst AppNavbar = () => {\n  const { t } = useTranslation();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleBurgerClick = () => setIsOpen((isOpen) => !isOpen);\n\n  return (\n    <nav className={clsx(\"navbar\", Styles.Navbar)}>\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <span\n            role=\"button\"\n            className={clsx(\n              \"navbar-burger burger white\",\n              isOpen ? \"is-active\" : null\n            )}\n            aria-label=\"menu\"\n            aria-expanded=\"false\"\n            data-target=\"navbarMenu\"\n            onClick={handleBurgerClick}\n          >\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </span>\n        </div>\n        <div\n          id=\"navbarMenu\"\n          className={clsx(\n            \"navbar-menu\",\n            Styles.NavbarMenu,\n            isOpen ? \"is-active\" : null\n          )}\n        >\n          <div className=\"navbar-start\">\n            <span className=\"navbar-item\">\n              <a className=\"button is-white is-outlined\" href={ROUTE_HOME}>\n                <span className=\"icon\">\n                  <i className=\"fa fa-home\"></i>\n                </span>\n                <span>{t(\"Menu-home\")}</span>\n              </a>\n            </span>\n          </div>\n          <div className=\"navbar-end\">\n            <span className=\"navbar-item\">\n              <Link\n                className=\"button is-white is-outlined\"\n                to={ROUTE_LIVE_SCHEDULES}\n              >\n                <span className=\"icon\">\n                  <i className=\"fa fa-calendar\"></i>\n                </span>\n                <span>{t(\"Menu-schedules-live\")}</span>\n              </Link>\n            </span>\n            <span className=\"navbar-item\">\n              <Link\n                className=\"button is-white is-outlined\"\n                to={ROUTE_ALL_SCHEDULES}\n              >\n                <span className=\"icon\">\n                  <i className=\"fa fa-calendar-alt\"></i>\n                </span>\n                <span>{t(\"Menu-schedules-all\")}</span>\n              </Link>\n            </span>\n            <span className=\"navbar-item\">\n              <a\n                className=\"button is-white is-outlined\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href=\"https://github.com/etf1/kafka-message-scheduler-admin\"\n              >\n                <span className=\"icon\">\n                  <i className=\"fab fa-github\"></i>\n                </span>\n                <span>{t(\"Menu-Source\")}</span>\n              </a>\n            </span>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default AppNavbar;\n","import React, { Suspense } from \"react\";\nimport \"./App.css\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport routes from \"../router/routes\";\nimport AppNavbar from \"./app-navbar/AppNavbar\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <section className=\"hero is-info is-fullheight app-hero\">\n          <div className=\"hero-head\">\n            <AppNavbar />\n          </div>\n          <div className=\"hero-body app-hero-body\">\n            <Switch>\n              {routes.map((route) => {\n                return (\n                  <Route key={route.key} exact={route.exact} path={route.path}>\n                    <Suspense fallback={<div></div>}>\n                      <route.component />\n                    </Suspense>\n                  </Route>\n                );\n              })}\n            </Switch>\n          </div>\n        </section>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// These must be the first lines in src/index.js\nimport \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\n\nimport React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bulma/css/bulma.css\";\nimport \"./index.css\";\nimport App from \"_core/app/App\";\n\nimport \"_core/i18n\";\n\nimport init from \"_core/service/config\";\n\ninit().then(() => {\n  /*if (process.env.NODE_ENV === \"development\") {\n    const { worker } = require(\"./mocks/browser\");\n    worker.start();\n  }*/\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <Suspense fallback={<div></div>}>\n        <App />\n      </Suspense>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n});\n"],"sourceRoot":""}