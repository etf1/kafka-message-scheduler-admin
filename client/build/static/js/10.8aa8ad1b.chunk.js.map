{"version":3,"sources":["business/scheduler/component/SchedulerTable.tsx","business/page/Schedulers.tsx","_common/component/transition/Appear.tsx","_common/component/layout/panel/Panel.tsx","business/scheduler/service/SchedulerService.ts","_common/component/transition/Appear.module.css","_common/component/layout/panel/Panel.module.css","business/scheduler/hook/useSchedulers.ts","business/scheduler/component/SchedulerTable.module.css"],"names":["SchedulerTable","schedulers","detailUrl","onClick","t","useTranslation","className","style","cursor","map","scheduler","clsx","Style","ColWithId","ColWithLink","to","resolvePath","schedulerName","name","http_port","instances","length","Schedulers","useSchedulers","Panel","icon","title","ROUTE_SCHEDULER_DETAIL","Appear","visible","timeout","fadeMore","children","nodeRef","React","useRef","CSSTransition","in","classNames","enter","enterActive","enterMoreActive","exit","exitActive","exitMoreActive","iconStyle","rightHeader","allowCollapse","restProps","useState","isDown","setIsDown","handleClick","Title","Icon","TitleIcon","size","ref","CollapseIcon","Children","count","makeSearchArgs","p","res","scheduleId","max","sort","sortOrder","epochFrom","epochTo","listAllSchedulers","a","get","getSchedulersUrl","makeScheduleInfoModel","schedules","o","id","schedule","timestamp","epoch","targetTopic","targetId","value","makeScheduleModel","topic","searchLiveSchedules","getLiveSchedulesUrl","result","searchSchedules","getSchedulesUrl","getScheduleDetail","getScheduleDetailUrl","sch","Error","getLiveScheduleDetail","getLiveScheduleDetailUrl","module","exports","useRefresh","refresh","setSchedulers","isLoading","setIsLoading","useEffect"],"mappings":"wKAsDeA,EAzCsC,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,QAClEC,EAAMC,cAAND,EACR,OACI,wBAAmBE,UAAU,6CAA7B,UACA,gCACE,+BACE,oBAAIC,MAAO,CAACC,OAAO,WAAnB,SAAgCJ,EAAE,gCAClC,oBAAIG,MAAO,CAACC,OAAO,WAAnB,SAAgCJ,EAAE,gCAClC,oBAAIG,MAAO,CAACC,OAAO,WAAnB,SAAgCJ,EAAE,6CAKtC,gCACGH,EAAWQ,KAAI,SAACC,GACf,OACE,qBAA8BP,QAAS,kBAAMA,GAAWA,EAAQO,IAAhE,UACE,oBAAIJ,UAAWK,YAAKC,IAAMC,UAAWD,IAAME,aAA3C,SACE,cAAC,IAAD,CACEC,GAAIC,YAAYd,EAAW,CACzBe,cAAeP,EAAUQ,OAF7B,SAKGR,EAAUQ,SAGf,6BACCR,EAAUS,YAEX,6BACCT,EAAUU,UAAUC,WAdvB,UAAYX,EAAUQ,cAbjB,U,yBCIJI,UAbI,WAAO,IAEhBlB,EAAMC,cAAND,EACAH,EAAesB,cAAftB,WAER,OAAO,cAACuB,EAAA,EAAD,CAAOC,KAAM,YAAaC,MAAOtB,EAAE,yBAAnC,SAEL,cAAC,EAAD,CAAgBH,WAAYA,EAAYC,UAAWyB,U,wHCexCC,EAnBA,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,QAASC,EAA+C,EAA/CA,QAASC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,SACtCC,EAAUC,IAAMC,OAAO,MAC7B,OACE,cAACC,EAAA,EAAD,CACEC,GAAIR,EACJC,QAASA,GAAW,IACpBG,QAASA,EACTK,WAAY,CACVC,MAAO3B,IAAM2B,MACbC,YAAaT,EAAWnB,IAAM6B,gBAAkB7B,IAAM4B,YACtDE,KAAM9B,IAAM8B,KACZC,WAAYZ,EAAWnB,IAAMgC,eAAiBhC,IAAM+B,YARxD,SAWGX,GAAYA,EAASC,M,2BC6CbT,IAtDqB,SAAC,GAS9B,IARLE,EAQI,EARJA,MACAD,EAOI,EAPJA,KACAoB,EAMI,EANJA,UACAC,EAKI,EALJA,YACAxC,EAII,EAJJA,UAII,IAHJyC,qBAGI,SAFJf,EAEI,EAFJA,SACGgB,EACC,mGACwBC,oBAAkB,GAD1C,mBACGC,EADH,KACWC,EADX,KAEEC,EAAc,WAClBL,GAAiBI,GAAU,SAACD,GAAD,OAAaA,MAG1C,OACE,8CAAK5C,UAAWK,YAAK,MAAOC,IAAMY,MAAOlB,IAAgB0C,GAAzD,cACE,sBAAK1C,UAAU,UAAf,UACE,qBAAKA,UAAU,SAASH,QAASiD,EAAjC,SACE,oBAAG9C,UAAWK,YAAK,aAAcC,IAAMyC,OAAvC,UACG5B,GACC,cAAC6B,EAAA,EAAD,CACEpC,KAAMO,EACNnB,UAAWM,IAAM2C,UACjBC,KAAK,KACLjD,MAAOsC,IAGX,cAAC,EAAD,CAAQhB,UAAWH,EAAnB,SACG,SAACO,GAAD,OACC,sBAAMwB,IAAKxB,EAAS3B,UAAU,MAA9B,SACGoB,YAMVoB,GAAe,qBAAKxC,UAAU,mBAAf,SAAmCwC,IAClDC,GACC,qBACEzC,UAAWK,YAAK,mBAAoBC,IAAM8C,cAC1CvD,QAASiD,EAFX,SAIE,cAACE,EAAA,EAAD,CAAMpC,KAAMgC,EAAS,aAAe,sBAI1C,cAAC,EAAD,CAAQrB,WAAYqB,GAAUhB,IAAMyB,SAASC,MAAM5B,GAAY,GAA/D,SACG,SAACC,GAAD,OAAa,qBAAKwB,IAAKxB,EAAV,SAAoBD,a,0PCxC7B6B,EAAiB,SAACC,GAC7B,IAAIC,EAAG,0BAAsBD,EAAE7C,eAgB/B,OAfI6C,EAAEE,aACJD,GAAG,uBAAoBD,EAAEE,aAEvBF,EAAEG,MACJF,GAAG,eAAYD,EAAEG,MAEfH,EAAEI,OACJH,GAAG,mBAAgBD,EAAEI,KAAlB,YAA0BJ,EAAEK,WAAa,QAE1CL,EAAEM,YACJL,GAAG,sBAAmBD,EAAEM,YAEtBN,EAAEO,UACJN,GAAG,oBAAiBD,EAAEO,UAEjBN,GAGIO,EAAiB,uCAAG,sBAAAC,EAAA,sEAClBC,YAAIC,eADc,mFAAH,qDAGjBC,EAAwB,SAACC,GACpC,OAAIA,EACKA,EAAUlE,KAAI,SAACmE,GACpB,MAAO,CACLC,GAAID,EAAEE,SAASD,GACfnE,UAAWkE,EAAElE,UACbqE,UAAWH,EAAEE,SAASC,UACtBC,MAAOJ,EAAEE,SAASE,MAClBC,YAAaL,EAAEE,SAAS,gBACxBI,SAAUN,EAAEE,SAAS,cACrBK,MAAOP,EAAEE,SAASK,UAIjBR,GAGIS,EAAoB,SAAC,EAAmBnE,GAAqC,IAAtD6D,EAAqD,EAArDA,SAClC,MAAO,CACLD,GAAIC,EAASD,GACbnE,UAAWO,EACX8D,UAAWD,EAASC,UACpBC,MAAOF,EAASE,MAChBC,YAAaH,EAAS,gBACtBI,SAAUJ,EAAS,cACnBK,MAAOL,EAASK,MAChBE,MAAOP,EAASO,QAGPC,EAAmB,uCAAG,WAAOxB,GAAP,iBAAAS,EAAA,sEACyBC,YACxDe,YAAoBzB,EAAE7C,eAAiB4C,EAAeC,IAFvB,cAC3B0B,EAD2B,OAK3BzB,EAAMW,EAAsBc,EAAOb,WALR,kBAM1BZ,GAN0B,2CAAH,sDAQnB0B,EAAe,uCAAG,WAAO3B,GAAP,eAAAS,EAAA,sEAC6BC,YAAIkB,YAAgB5B,EAAE7C,eAAiB4C,EAAeC,IADnF,cACvB0B,EADuB,yBAEtBd,EAAsBc,EAAOb,YAFP,2CAAH,sDAIfgB,EAAiB,uCAAG,WAAO1E,EAAuB4D,GAA9B,eAAAN,EAAA,sEACEC,YAAIoB,YAAqB3E,EAAe4D,IAD1C,aACzBW,EADyB,QAGpBnE,OAAS,GAHW,yCAItBmE,EAAO/E,KAAI,SAACoF,GAAD,OAAST,EAAkBS,EAAK5E,OAJrB,aAMzB,IAAI6E,MAAM,aANe,2CAAH,wDASjBC,EAAqB,uCAAG,WAAO9E,EAAuB4D,GAA9B,eAAAN,EAAA,sEACFC,YAAIwB,YAAyB/E,EAAe4D,IAD1C,aAC7BW,EAD6B,QAGxBnE,OAAS,GAHe,yCAI1BmE,EAAO/E,KAAI,SAACoF,GAAD,OAAST,EAAkBS,EAAK5E,OAJjB,aAM7B,IAAI6E,MAAM,aANmB,2CAAH,yD,oBC/FlCG,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,YAAc,4BAA4B,KAAO,qBAAqB,WAAa,2BAA2B,gBAAkB,gCAAgC,eAAiB,iC,oBCAjOD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,UAAY,yBAAyB,aAAe,8B,+FCmBjH3E,IAhBO,WAAO,IAAD,EACD4E,cADC,mBACnBC,EADmB,KACVxC,EADU,OAEUX,mBAAsB,IAFhC,mBAEnBhD,EAFmB,KAEPoG,EAFO,OAGQpD,oBAAkB,GAH1B,mBAGnBqD,EAHmB,KAGRC,EAHQ,KAa1B,OATAC,qBAAU,WACRD,GAAa,GACb,sBAAC,4BAAAhC,EAAA,sEACmBD,cADnB,OACOP,EADP,OAECsC,EAActC,GACdwC,GAAa,GAHd,0CAAD,KAKC,CAAC3C,IAEG,CAAE3D,aAAYqG,YAAWF,a,oBChBlCH,EAAOC,QAAU,CAAC,UAAY,kCAAkC,YAAc,oCAAoC,WAAa","file":"static/js/10.8aa8ad1b.chunk.js","sourcesContent":["import clsx from \"clsx\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { resolvePath } from \"_core/router/routes\";\nimport { Scheduler } from \"../type\";\nimport Style from \"./SchedulerTable.module.css\";\n\nexport type SchedulerTableProps = {\n    schedulers : Scheduler[];\n    onClick?: (scheduler:Scheduler) => void;\n    detailUrl: string;\n}\n\nconst SchedulerTable:React.FC<SchedulerTableProps> = ({schedulers, detailUrl, onClick})=>{\n    const { t } = useTranslation();\n    return (\n        <table key=\"table\" className=\"table is-striped is-hoverable is-fullwidth\">\n        <thead>\n          <tr>\n            <th style={{cursor:\"pointer\"}}>{t(\"SchedulerTable-column-Name\")}</th>\n            <th style={{cursor:\"pointer\"}}>{t(\"SchedulerTable-column-Port\")}</th>\n            <th style={{cursor:\"pointer\"}}>{t(\"SchedulerTable-column-Nb-Instances\")}</th>\n     \n          </tr>\n        </thead>\n  \n        <tbody>\n          {schedulers.map((scheduler) => {\n            return (\n              <tr key={`${scheduler.name}`} onClick={() => onClick && onClick(scheduler)}>\n                <td className={clsx(Style.ColWithId, Style.ColWithLink)}>\n                  <Link\n                    to={resolvePath(detailUrl, {\n                      schedulerName: scheduler.name\n                    })}\n                  >\n                    {scheduler.name}\n                  </Link>\n                </td>\n                <td> \n                {scheduler.http_port}\n                </td>\n                <td> \n                {scheduler.instances.length}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    )\n}\n\n\nexport default SchedulerTable;","import SchedulerTable from \"business/scheduler/component/SchedulerTable\";\nimport useSchedulers from \"business/scheduler/hook/useSchedulers\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Panel from \"_common/component/layout/panel/Panel\";\nimport { ROUTE_SCHEDULER_DETAIL } from \"_core/router/routes\";\n\nconst Schedulers = () => {\n\n  const { t } = useTranslation();\n  const { schedulers } = useSchedulers();\n  \n  return <Panel icon={\"stopwatch\"} title={t(\"Page-title-schedulers\")}>\n\n    <SchedulerTable schedulers={schedulers} detailUrl={ROUTE_SCHEDULER_DETAIL}/>\n\n  </Panel>\n}\n\n\nexport default Schedulers;","import React from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Style from \"./Appear.module.css\";\n\nexport type AppearProps = {\n  visible: boolean | undefined;\n  timeout?: number;\n  fadeMore?: boolean;\n  children?: (nodeRef: React.MutableRefObject<null>) => React.ReactNode;\n};\nconst Appear = ({ visible, timeout, fadeMore, children }: AppearProps) => {\n  const nodeRef = React.useRef(null);\n  return (\n    <CSSTransition\n      in={visible}\n      timeout={timeout || 2000}\n      nodeRef={nodeRef}\n      classNames={{\n        enter: Style.enter,\n        enterActive: fadeMore ? Style.enterMoreActive : Style.enterActive,\n        exit: Style.exit,\n        exitActive: fadeMore ? Style.exitMoreActive : Style.exitActive\n      }}\n    >\n      {children && children(nodeRef)}\n    </CSSTransition>\n  );\n};\n\nexport default Appear;\n","import clsx from \"clsx\";\nimport React, { useState } from \"react\";\nimport Appear from \"_common/component/transition/Appear\";\nimport Icon from \"_common/component/element/icon/Icon\";\nimport Style from \"./Panel.module.css\";\n\ntype PanelProps = {\n  title?: React.ReactNode;\n  icon?: string;\n  iconStyle?: React.CSSProperties;\n  rightHeader?: React.ReactNode;\n  allowCollapse?: boolean;\n  className?: string;\n};\n\nconst Panel: React.FC<PanelProps> = ({\n  title,\n  icon,\n  iconStyle,\n  rightHeader,\n  className,\n  allowCollapse = false,\n  children,\n  ...restProps\n}) => {\n  const [isDown, setIsDown] = useState<boolean>(true);\n  const handleClick = () => {\n    allowCollapse && setIsDown((isDown) => !isDown);\n  };\n\n  return (\n    <div className={clsx(\"box\", Style.Panel, className)} {...restProps}>\n      <div className=\"columns\">\n        <div className=\"column\" onClick={handleClick}>\n          <p className={clsx(\"title is-4\", Style.Title)}>\n            {icon && (\n              <Icon\n                name={icon}\n                className={Style.TitleIcon}\n                size=\"lg\"\n                style={iconStyle}\n              />\n            )}\n            <Appear visible={!!title}>\n              {(nodeRef) => (\n                <span ref={nodeRef} className=\"ml5\">\n                  {title}\n                </span>\n              )}\n            </Appear>\n          </p>\n        </div>\n        {rightHeader && <div className=\"column is-narrow\">{rightHeader}</div>}\n        {allowCollapse && (\n          <div\n            className={clsx(\"column is-narrow\", Style.CollapseIcon)}\n            onClick={handleClick}\n          >\n            <Icon name={isDown ? \"chevron-up\" : \"chevron-down\"} />\n          </div>\n        )}\n      </div>\n      <Appear visible={!!(isDown && React.Children.count(children) > 0)}>\n        {(nodeRef) => <div ref={nodeRef}>{children}</div>}\n      </Appear>\n    </div>\n  );\n};\n\nexport default Panel;\n","import { get } from \"_common/service/ApiUtil\";\nimport {\n  getLiveScheduleDetailUrl,\n  getLiveSchedulesUrl,\n  getScheduleDetailUrl,\n  getSchedulersUrl,\n  getSchedulesUrl,\n} from \"_core/service/config\";\nimport { Schedule, ScheduleInfo, Scheduler } from \"../type\";\n\nexport type SortType = \"id\" | \"epoch\" | \"timestamp\";\nexport type SortOrder = \"asc\" | \"desc\";\n\nexport type SearchParams = {\n  scheduleId?: string;\n  epochFrom?: number;\n  epochTo?: number;\n  sort?: SortType;\n  sortOrder?: SortOrder;\n  schedulerName: string;\n  max: number; // -1  for all\n};\n\nexport const makeSearchArgs = (p: SearchParams): string => {\n  let res = `?scheduler-name=${p.schedulerName}`;\n  if (p.scheduleId) {\n    res += `&schedule-id=${p.scheduleId}`;\n  }\n  if (p.max) {\n    res += `&max=${p.max}`;\n  }\n  if (p.sort) {\n    res += `&sort-by=${p.sort} ${p.sortOrder || \"asc\"}`;\n  }\n  if (p.epochFrom) {\n    res += `&epoch-from=${p.epochFrom}`;\n  }\n  if (p.epochTo) {\n    res += `&epoch-to=${p.epochTo}`;\n  }\n  return res;\n};\n\nexport const listAllSchedulers = async (): Promise<Scheduler[]> => {\n  return await get(getSchedulersUrl());\n};\nexport const makeScheduleInfoModel = (schedules: any[]): ScheduleInfo[] => {\n  if (schedules) {\n    return schedules.map((o) => {\n      return {\n        id: o.schedule.id,\n        scheduler: o.scheduler,\n        timestamp: o.schedule.timestamp,\n        epoch: o.schedule.epoch,\n        targetTopic: o.schedule[\"target-topic\"],\n        targetId: o.schedule[\"target-key\"],\n        value: o.schedule.value,\n      };\n    });\n  }\n  return schedules;\n};\n\nexport const makeScheduleModel = ({ schedule }: any, schedulerName: string): Schedule => {\n  return {\n    id: schedule.id,\n    scheduler: schedulerName,\n    timestamp: schedule.timestamp,\n    epoch: schedule.epoch,\n    targetTopic: schedule[\"target-topic\"],\n    targetId: schedule[\"target-key\"],\n    value: schedule.value,\n    topic: schedule.topic,\n  };\n};\nexport const searchLiveSchedules = async (p: SearchParams): Promise<ScheduleInfo[]> => {\n  const result: { found: number; schedules: any[] } = await get(\n    getLiveSchedulesUrl(p.schedulerName) + makeSearchArgs(p)\n  );\n\n  const res = makeScheduleInfoModel(result.schedules);\n  return res;\n};\nexport const searchSchedules = async (p: SearchParams): Promise<ScheduleInfo[]> => {\n  const result: { found: number; schedules: any[] } = await get(getSchedulesUrl(p.schedulerName) + makeSearchArgs(p));\n  return makeScheduleInfoModel(result.schedules);\n};\nexport const getScheduleDetail = async (schedulerName: string, id: string): Promise<Schedule[]> => {\n  const result: Schedule[] = await get(getScheduleDetailUrl(schedulerName, id));\n\n  if (result.length > 0) {\n    return result.map((sch) => makeScheduleModel(sch, schedulerName));\n  }\n  throw new Error(\"Not found\");\n};\n\nexport const getLiveScheduleDetail = async (schedulerName: string, id: string): Promise<Schedule[]> => {\n  const result: Schedule[] = await get(getLiveScheduleDetailUrl(schedulerName, id));\n\n  if (result.length > 0) {\n    return result.map((sch) => makeScheduleModel(sch, schedulerName));\n  }\n  throw new Error(\"Not found\");\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Appear_enter__3WCKW\",\"enterActive\":\"Appear_enterActive__3_cy6\",\"exit\":\"Appear_exit__1YU6A\",\"exitActive\":\"Appear_exitActive__1vJVi\",\"enterMoreActive\":\"Appear_enterMoreActive__1fVNK\",\"exitMoreActive\":\"Appear_exitMoreActive__OKk_T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Panel\":\"Panel_Panel__1jxoT\",\"Title\":\"Panel_Title__AcpeW\",\"TitleIcon\":\"Panel_TitleIcon__oIazQ\",\"CollapseIcon\":\"Panel_CollapseIcon__1XtgC\"};","import { useEffect, useState } from \"react\";\nimport useRefresh from \"_common/hook/useRefresh\";\nimport { listAllSchedulers } from \"../service/SchedulerService\";\nimport { Scheduler } from \"./../type/index\";\nconst useSchedulers = () => {\n  const [refresh, count] = useRefresh();\n  const [schedulers, setSchedulers] = useState<Scheduler[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  useEffect(() => {\n    setIsLoading(true);\n    (async () => {\n      const res = await listAllSchedulers();\n      setSchedulers(res);\n      setIsLoading(false);\n    })();\n  }, [count]);\n\n  return { schedulers, isLoading, refresh };\n};\n\nexport default useSchedulers;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ColWithId\":\"SchedulerTable_ColWithId__3uZWE\",\"ColWithLink\":\"SchedulerTable_ColWithLink__2ihq0\",\"ValueField\":\"SchedulerTable_ValueField__1-hdk\"};"],"sourceRoot":""}