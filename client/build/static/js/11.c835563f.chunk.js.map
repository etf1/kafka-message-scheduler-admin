{"version":3,"sources":["business/home/AppStartCard.tsx","business/home/Home.tsx","business/scheduler/service/SchedulerService.ts","_common/service/SessionStorageService.ts"],"names":["AppStatCard","stat","t","useTranslation","className","style","backgroundColor","color","Icon","name","marginRight","to","resolvePath","ROUTE_SCHEDULER_DETAIL","schedulerName","scheduler","maxHeight","paddingLeft","paddingRight","paddingTop","margin","padding","ROUTE_LIVE_SCHEDULES","data-tooltip","total_live","ROUTE_ALL_SCHEDULES","total","Home","useState","error","setError","stats","setStats","clear","useEffect","a","getAppStats","undefined","console","marginTop","fontWeight","map","st","makeSearchArgs","p","res","scheduleId","sort","sortOrder","epochFrom","epochTo","get","getAppStatsUrl","listAllSchedulers","getSchedulersUrl","makeScheduleInfoModel","schedules","o","id","schedule","timestamp","epoch","targetTopic","targetId","value","makeScheduleModel","topic","searchLiveSchedules","getLiveSchedulesUrl","result","found","searchSchedules","getSchedulesUrl","getScheduleDetail","getScheduleDetailUrl","length","sch","Error","getLiveScheduleDetail","getLiveScheduleDetailUrl","BASE_KEY","load","key","defaultValue","store","sessionStorage","getItem","JSON","parse","window","atob","__primitive__value","save","isPrimitive","storedValue","setItem","btoa","stringify","keepKeyPredicat","data","Object","keys","forEach"],"mappings":"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","file":"static/js/11.c835563f.chunk.js","sourcesContent":["import { AppStat } from \"business/scheduler/service/SchedulerService\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport Icon from \"_common/component/element/icon/Icon\";\nimport { resolvePath, ROUTE_ALL_SCHEDULES, ROUTE_LIVE_SCHEDULES, ROUTE_SCHEDULER_DETAIL } from \"_core/router/routes\";\n\ntype AppStatCardProps = {\n  stat: AppStat;\n};\n\nconst AppStatCard: React.FC<AppStatCardProps> = ({ stat }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"column is-4-tablet is-4-desktop\">\n      <div className=\"card\">\n        <div className=\"card-header\" style={{ backgroundColor: \"orange\" }}>\n          <h3 className=\"card-header-title is-inline\" style={{ color: \"white\" }}>\n              <Icon name={\"stopwatch\"} style={{marginRight:20}}  className={\"has-tooltip-right\"} />{\" \"}\n               <Link style={{ color: \"white\" }} to={resolvePath(ROUTE_SCHEDULER_DETAIL, {schedulerName:stat.scheduler})}>{stat.scheduler}</Link>\n          </h3>\n        </div>\n        <div\n          className=\"card-content\"\n          style={{\n            maxHeight: 450,\n            backgroundColor: \"#f5f5f5\",\n            paddingLeft: 0,\n            paddingRight: 0,\n            paddingTop: \"1rem\",\n          }}\n        >\n          <h3\n            className=\"subtitle is-6\"\n            style={{\n              margin: 0,\n              padding: \"1rem\",\n            }}\n          >\n            <Link to={ROUTE_LIVE_SCHEDULES + \"?schedulerName=\" + stat.scheduler}>\n              <Icon name={\"calendar\"} style={{marginRight:20}}  className={\"has-tooltip-right\"} data-tooltip={t(\"SchedulesLive\")} />{\" \"}\n              {stat.total_live} {t(\"SchedulesLive\")}\n            </Link>\n          </h3>\n          <h3\n            className=\"subtitle is-6\"\n            style={{\n              margin: 0,\n              padding: \"1rem\",\n            }}\n          >\n            <Link to={ROUTE_ALL_SCHEDULES + \"?schedulerName=\" + stat.scheduler}>\n              <Icon name={\"calendar-alt\"}  style={{marginRight:20}} className={\"has-tooltip-right\"} data-tooltip={t(\"Schedules\")} />{\" \"}\n              {stat.total} {t(\"Schedules\")}\n            </Link>\n          </h3>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AppStatCard;\n","import { useTranslation } from \"react-i18next\";\n\nimport { AppStat, getAppStats } from \"business/scheduler/service/SchedulerService\";\nimport { useEffect, useState } from \"react\";\nimport { clear } from \"_common/service/SessionStorageService\";\nimport AppStatCard from \"./AppStartCard\";\nimport Icon from \"_common/component/element/icon/Icon\";\n\nconst Home = () => {\n  const { t } = useTranslation();\n  const [error, setError] = useState<Error>();\n  const [stats, setStats] = useState<AppStat[]>([]);\n  clear(() => false);\n  useEffect(() => {\n    (async () => {\n      try {\n        const stats = await getAppStats();\n\n        setStats(stats);\n        setError(undefined);\n      } catch (err) {\n        console.error(err);\n        setError(err);\n      }\n    })();\n  }, []);\n\n  return (\n    <div className=\"columns\" style={{ margin: \"3rem\", marginTop: \"6rem\" }}>\n      {error && (\n        <div className=\"animate-opacity\" style={{ fontWeight: 800, color: \"red\" }}>\n          <Icon name=\"exclamation-triangle\"/> {t(\"LoadingError\")}\n        </div>\n      )}\n      {!error &&\n        stats.map((st) => {\n          return <AppStatCard key={st.scheduler} stat={st} />;\n        })}\n    </div>\n  );\n};\n\nexport default Home;\n","import { get } from \"_common/service/ApiUtil\";\nimport {\n  getAppStatsUrl,\n  getLiveScheduleDetailUrl,\n  getLiveSchedulesUrl,\n  getScheduleDetailUrl,\n  getSchedulersUrl,\n  getSchedulesUrl,\n} from \"_core/service/config\";\nimport { Schedule, ScheduleInfo, Scheduler } from \"../type\";\n\nexport type SortType = \"id\" | \"epoch\" | \"timestamp\";\nexport type SortOrder = \"asc\" | \"desc\";\nexport type AppStat = {\n  scheduler: string;\n  total_live:number;\n  total:number;\n}\n\nexport type SearchParams = {\n  scheduleId?: string;\n  epochFrom?: number;\n  epochTo?: number;\n  sort?: SortType;\n  sortOrder?: SortOrder;\n  schedulerName: string;\n  max: number; // -1  for all\n};\n\nexport const makeSearchArgs = (p: SearchParams): string => {\n  let res = '?';//`?scheduler-name=${p.schedulerName}`;\n  if (p.scheduleId) {\n    res += `&schedule-id=${p.scheduleId}`;\n  }\n /* if (p.max) {\n    res += `&max=${p.max}`;\n  }*/\n  if (p.sort) {\n    res += `&sort-by=${p.sort} ${p.sortOrder || \"asc\"}`;\n  }\n  if (p.epochFrom) {\n    res += `&epoch-from=${p.epochFrom}`;\n  }\n  if (p.epochTo) {\n    res += `&epoch-to=${p.epochTo}`;\n  }\n  return res;\n};\n\nexport const getAppStats = async (): Promise<AppStat[]> => {\n  return await get(getAppStatsUrl());\n};\n\nexport const listAllSchedulers = async (): Promise<Scheduler[]> => {\n  return await get(getSchedulersUrl());\n};\nexport const makeScheduleInfoModel = (schedules: any[]): ScheduleInfo[] => {\n  if (schedules) {\n    return schedules.map((o) => {\n      return {\n        id: o.schedule.id,\n        scheduler: o.scheduler,\n        timestamp: o.schedule.timestamp,\n        epoch: o.schedule.epoch,\n        targetTopic: o.schedule[\"target-topic\"],\n        targetId: o.schedule[\"target-key\"],\n        value: o.schedule.value,\n      };\n    });\n  }\n  return schedules;\n};\n\nexport const makeScheduleModel = ({ schedule }: any, schedulerName: string): Schedule => {\n  return {\n    id: schedule.id,\n    scheduler: schedulerName,\n    timestamp: schedule.timestamp,\n    epoch: schedule.epoch,\n    targetTopic: schedule[\"target-topic\"],\n    targetId: schedule[\"target-key\"],\n    value: schedule.value,\n    topic: schedule.topic,\n  };\n};\nexport const searchLiveSchedules = async (p: SearchParams): Promise<{found: number; schedules:ScheduleInfo[]}> => {\n  const result: { found: number; schedules: any[] } = await get(\n    getLiveSchedulesUrl(p.schedulerName) + makeSearchArgs(p)\n  );\n\n  const res = {found: result.found, schedules:makeScheduleInfoModel(result.schedules)};\n  return res;\n};\nexport const searchSchedules = async (p: SearchParams): Promise<{found: number; schedules:ScheduleInfo[]}> => {\n  const result: { found: number; schedules: any[] } = await get(getSchedulesUrl(p.schedulerName) + makeSearchArgs(p));\n  return {found: result.found, schedules:makeScheduleInfoModel(result.schedules)};\n};\nexport const getScheduleDetail = async (schedulerName: string, id: string): Promise<Schedule[]> => {\n  const result: Schedule[] = await get(getScheduleDetailUrl(schedulerName, id));\n\n  if (result.length > 0) {\n    return result.map((sch) => makeScheduleModel(sch, schedulerName));\n  }\n  throw new Error(\"Not found\");\n};\n\nexport const getLiveScheduleDetail = async (schedulerName: string, id: string): Promise<Schedule[]> => {\n  \n  const result: Schedule[] = await get(getLiveScheduleDetailUrl(schedulerName, id));\n\n  if (result.length > 0) {\n    return result.map((sch) => makeScheduleModel(sch, schedulerName));\n  }\n  throw new Error(\"Not found\");\n};\n","import { Dictionary, isPrimitive } from \"_common/type/utils\";\n\nconst BASE_KEY = \"kafka-msg-scheduler-admin-v0\";\n\nexport function load<T>(key: string, defaultValue: T | undefined): T | undefined {\n  const store = sessionStorage.getItem(BASE_KEY);\n  if (store) {\n    try {\n      const result: any = JSON.parse(window.atob(store));\n      if (result && result[key]) {\n        if (result[key] && result[key].__primitive__value === true) {\n          return result[key].value as T;\n        } else {\n          return result[key] as T;\n        }\n      } else {\n        return defaultValue;\n      }\n    } catch {\n      return defaultValue;\n    }\n  } else {\n    return defaultValue;\n  }\n}\nexport function save<T>(key: string, value: T) {\n  const store = sessionStorage.getItem(BASE_KEY);\n\n  const result: Dictionary = store ? JSON.parse(window.atob(store)) : {};\n  if (isPrimitive(value) || value === undefined) {\n    const storedValue = { ...result, [key]: { __primitive__value: true, value } };\n    sessionStorage.setItem(BASE_KEY, window.btoa(JSON.stringify(storedValue)));\n  } else {\n    const storedValue = { ...result, [key]: value };\n    sessionStorage.setItem(BASE_KEY, window.btoa(JSON.stringify(storedValue)));\n  }\n}\n\nexport function clear(keepKeyPredicat: (key: string) => boolean) {\n  const store = sessionStorage.getItem(BASE_KEY);\n  if (store) {\n    let data: any = JSON.parse(window.atob(store));\n    let result: Dictionary = {};\n    Object.keys(data).forEach ( key => {\n      if (keepKeyPredicat(key)) {\n        result[key] = data[key];\n      }\n    });\n    sessionStorage.setItem(BASE_KEY, window.btoa(JSON.stringify(result)));\n  }\n}\n"],"sourceRoot":""}