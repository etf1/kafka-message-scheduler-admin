{"version":3,"sources":["business/scheduler/component/SchedulerInstanceTable.tsx","business/page/SchedulerDetail.tsx","_common/component/element/icon/Icon.tsx","_common/component/transition/Appear.tsx","_common/component/layout/panel/Panel.tsx","business/scheduler/service/SchedulerService.ts","_common/component/transition/Appear.module.css","_common/component/layout/panel/Panel.module.css","business/scheduler/hook/useSchedulers.ts","_common/component/breadcrumb/Breadcrumb.tsx","_common/component/layout/container/Container.tsx","_common/component/layout/container/Container.module.css","business/scheduler/component/SchedulerInstanceTable.module.css"],"names":["SchedulerInstanceTable","schedulerInstances","onClick","t","useTranslation","className","style","cursor","map","inst","clsx","Styles","ColWithId","ColWithLink","ip","hostname","join","bootstrap_servers","topics","SchedulerDetail","schedulerName","useParams","scheduler","useSchedulers","schedulers","find","sch","name","instances","Breadcrumb","data","url","label","resolvePath","ROUTE_SCHEDULER_DETAIL","Panel","icon","title","Container","padding","disabled","textAlign","type","defaultValue","http_port","Icon","isLeft","isRight","isSmall","rotated","size","marginRight","marginLeft","otherProps","dataTransform","slsx","Appear","visible","timeout","fadeMore","children","nodeRef","React","useRef","CSSTransition","in","classNames","enter","enterActive","enterMoreActive","exit","exitActive","exitMoreActive","iconStyle","rightHeader","allowCollapse","restProps","useState","isDown","setIsDown","handleClick","Style","Title","TitleIcon","ref","CollapseIcon","Children","count","makeSearchArgs","p","res","scheduleId","max","sort","sortOrder","epochFrom","epochTo","listAllSchedulers","a","get","getSchedulersUrl","makeScheduleInfoModel","schedules","o","id","schedule","timestamp","epoch","targetTopic","targetId","value","makeScheduleModel","topic","searchLiveSchedules","getLiveSchedulesUrl","result","console","log","searchSchedules","getSchedulesUrl","getScheduleDetail","getScheduleDetailUrl","length","Error","getLiveScheduleDetail","getLiveScheduleDetailUrl","module","exports","useRefresh","refresh","setSchedulers","isLoading","setIsLoading","useEffect","len","aria-label","u","index","href","offset","Column"],"mappings":"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","file":"static/js/9.50dcf3a5.chunk.js","sourcesContent":["import clsx from \"clsx\";\nimport { useTranslation } from \"react-i18next\";\nimport { SchedulerInstance } from \"../type\";\nimport Styles from \"./SchedulerInstanceTable.module.css\";\n\nexport type SchedulerInstanceTableProps = {\n    schedulerInstances : SchedulerInstance[];\n    onClick?: (scheduler:SchedulerInstance) => void;\n}\n/*\nbootstrap_servers: \"localhost:9092\"\nhostname: [\"localhost\"]\nip: \"127.0.0.1\"\ntopics: [\"schedules\"]\n0: \"schedules\"\n*/\nconst SchedulerInstanceTable:React.FC<SchedulerInstanceTableProps> = ({schedulerInstances, onClick})=>{\n    const { t } = useTranslation();\n    return (\n        <table key=\"table\" className=\"table is-striped is-hoverable is-fullwidth\">\n        <thead>\n          <tr>\n            <th style={{cursor:\"pointer\"}}>{t(\"SchedulerInstanceTable-column-Ip\")}</th>\n            <th style={{cursor:\"pointer\"}}>{t(\"SchedulerInstanceTable-column-Hostname\")}</th>\n            <th style={{cursor:\"pointer\"}}>{t(\"SchedulerInstanceTable-column-BootstrapServers\")}</th>\n            <th style={{cursor:\"pointer\"}}>{t(\"SchedulerInstanceTable-column-Topics\")}</th>\n     \n          </tr>\n        </thead>\n  \n        <tbody>\n          {schedulerInstances.map((inst) => {\n            return (\n              <tr key={`${inst.ip}`} onClick={() => onClick && onClick(inst)}>\n                <td className={clsx(Styles.ColWithId, Styles.ColWithLink)}>\n                {inst.ip}\n                </td>\n                <td> \n                {inst.hostname.join( ', ')}\n                </td>\n                <td> \n                {inst.bootstrap_servers}\n                </td>\n                <td> \n                {inst.topics.join( ', ')}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    )\n}\n\n\nexport default SchedulerInstanceTable;","import SchedulerInstanceTable from \"business/scheduler/component/SchedulerInstanceTable\";\nimport useSchedulers from \"business/scheduler/hook/useSchedulers\";\nimport { SchedulerInstance } from \"business/scheduler/type\";\nimport { useTranslation } from \"react-i18next\";\nimport { useParams } from \"react-router-dom\";\nimport Breadcrumb from \"_common/component/breadcrumb/Breadcrumb\";\nimport Container from \"_common/component/layout/container/Container\";\nimport Panel from \"_common/component/layout/panel/Panel\";\nimport { resolvePath, ROUTE_SCHEDULER_DETAIL } from \"_core/router/routes\";\n\nconst SchedulerDetail = () => {\n  const { t } = useTranslation();\n  const { schedulerName } = useParams<{ schedulerName: string }>();\n  const { schedulers } = useSchedulers();\n\n  const scheduler = schedulers.find((sch) => sch.name === schedulerName);\n\n  const instances: SchedulerInstance[] = scheduler?.instances || [];\n\n  return (\n    <>\n      <Breadcrumb\n        data={\n          scheduler\n            ? [\n                { url: \"/schedulers\", label: t(\"Menu-schedulers\") },\n                {\n                  url: resolvePath(ROUTE_SCHEDULER_DETAIL, {\n                    schedulerName: scheduler.name,\n                  }),\n                  label: scheduler.name,\n                },\n              ]\n            : []\n        }\n      />\n\n      <Panel icon={\"stopwatch\"} title={t(\"Page-title-scheduler-detail\")}>\n        <Container title={t(\"Scheduler-field-main\")}>\n          <div className=\"box\" style={{ padding: \"3rem\" }}>\n            {scheduler && (\n              <div className=\"columns\">\n                <div className=\"column\">\n                  <fieldset disabled style={{ textAlign: \"left\" }}>\n                    <div className=\"field\">\n                      <label className=\"label\">{t(\"Scheduler-field-name\")}</label>\n                      <div className=\"control\">\n                        <input className=\"input\" type=\"text\" defaultValue={scheduler.name} />\n                      </div>\n                    </div>\n                    <div className=\"field\">\n                      <label className=\"label\">{t(\"Scheduler-field-port\")}</label>\n                      <div className=\"control\">\n                        <input className=\"input\" type=\"text\" defaultValue={scheduler.http_port} />\n                      </div>\n                    </div>\n                  </fieldset>\n                </div>\n              </div>\n            )}\n          </div>\n        </Container>\n        <Container title={t(\"Scheduler-field-instances\")}>\n          <div className=\"box\" style={{ padding: \"3rem\" }}>\n            <SchedulerInstanceTable schedulerInstances={instances} />\n          </div>\n        </Container>\n      </Panel>\n    </>\n  );\n};\n\nexport default SchedulerDetail;\n","import clsx from \"clsx\";\nimport React from \"react\";\nimport { slsx } from \"_common/service/FunUtil\";\nimport { Dictionary } from \"_common/type/utils\";\nimport \"./Icon.css\";\n\nexport type IconProps = React.HTMLAttributes<HTMLSpanElement> & {\n  name: string;\n  rotated?: \"0\" | \"45\" | \"90\" | \"180\";\n  size?: \"\" | \"lg\" | \"2x\" | \"3x\";\n  isLeft?: boolean;\n  isRight?: boolean;\n  isSmall?: boolean;\n  marginRight?: string | number;\n  marginLeft?: string | number;\n};\n\nconst Icon = ({\n  name,\n  isLeft,\n  isRight,\n  isSmall,\n  className,\n  rotated,\n  size,\n  style,\n  marginRight,\n  marginLeft,\n  ...otherProps\n}: IconProps): React.ReactElement => {\n  const dataTransform = {} as Dictionary<string>;\n  if (rotated) {\n    dataTransform[\"data-fa-transform\"] = `rotate-${rotated}`;\n  }\n  return (\n    <span\n      key={name + className + rotated + size}\n      className={clsx(\n        \"icon defaultSize\",\n        isLeft ? \"is-left\" : \"\",\n        isRight ? \"is-right\" : \"\",\n        isSmall ? \"is-small\" : \"\",\n\n        className\n      )}\n      style={slsx(style, { marginLeft }, { marginRight })}\n      {...otherProps}\n    >\n      <i\n        className={clsx(`fas fa-${name}`, size ? `fa-${size}` : \"\")}\n        {...dataTransform}\n      ></i>\n    </span>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Styles from \"./Appear.module.css\";\n\nexport type AppearProps = {\n  visible: boolean | undefined;\n  timeout?: number;\n  fadeMore?: boolean;\n  children?: (nodeRef: React.MutableRefObject<null>) => React.ReactNode;\n};\nconst Appear = ({ visible, timeout, fadeMore, children }: AppearProps) => {\n  const nodeRef = React.useRef(null);\n  return (\n    <CSSTransition\n      in={visible}\n      timeout={timeout || 2000}\n      nodeRef={nodeRef}\n      classNames={{\n        enter: Styles.enter,\n        enterActive: fadeMore ? Styles.enterMoreActive : Styles.enterActive,\n        exit: Styles.exit,\n        exitActive: fadeMore ? Styles.exitMoreActive : Styles.exitActive\n      }}\n    >\n      {children && children(nodeRef)}\n    </CSSTransition>\n  );\n};\n\nexport default Appear;\n","import clsx from \"clsx\";\nimport React, { useState } from \"react\";\nimport Appear from \"_common/component/transition/Appear\";\nimport Icon from \"_common/component/element/icon/Icon\";\nimport Style from \"./Panel.module.css\";\n\ntype PanelProps = {\n  title?: React.ReactNode;\n  icon?: string;\n  iconStyle?: React.CSSProperties;\n  rightHeader?: React.ReactNode;\n  allowCollapse?: boolean;\n  className?: string;\n};\n\nconst Panel: React.FC<PanelProps> = ({\n  title,\n  icon,\n  iconStyle,\n  rightHeader,\n  className,\n  allowCollapse = false,\n  children,\n  ...restProps\n}) => {\n  const [isDown, setIsDown] = useState<boolean>(true);\n  const handleClick = () => {\n    allowCollapse && setIsDown((isDown) => !isDown);\n  };\n\n  return (\n    <div className={clsx(\"box\", Style.Panel, className)} {...restProps}>\n      <div className=\"columns\">\n        <div className=\"column\" onClick={handleClick}>\n          <p className={clsx(\"title is-4\", Style.Title)}>\n            {icon && (\n              <Icon\n                name={icon}\n                className={Style.TitleIcon}\n                size=\"lg\"\n                style={iconStyle}\n              />\n            )}\n            <Appear visible={!!title}>\n              {(nodeRef) => (\n                <span ref={nodeRef} className=\"ml5\">\n                  {title}\n                </span>\n              )}\n            </Appear>\n          </p>\n        </div>\n        {rightHeader && <div className=\"column is-narrow\">{rightHeader}</div>}\n        {allowCollapse && (\n          <div\n            className={clsx(\"column is-narrow\", Style.CollapseIcon)}\n            onClick={handleClick}\n          >\n            <Icon name={isDown ? \"chevron-up\" : \"chevron-down\"} />\n          </div>\n        )}\n      </div>\n      <Appear visible={!!(isDown && React.Children.count(children) > 0)}>\n        {(nodeRef) => <div ref={nodeRef}>{children}</div>}\n      </Appear>\n    </div>\n  );\n};\n\nexport default Panel;\n","import { get } from \"_common/service/ApiUtil\";\nimport {\n  getLiveScheduleDetailUrl,\n  getLiveSchedulesUrl,\n  getScheduleDetailUrl,\n  getSchedulersUrl,\n  getSchedulesUrl,\n} from \"_core/service/config\";\nimport { Schedule, ScheduleInfo, Scheduler } from \"../type\";\n\nexport type SortType = \"id\" | \"epoch\" | \"timestamp\";\nexport type SortOrder = \"asc\" | \"desc\";\n\nexport type SearchParams = {\n  scheduleId?: string;\n  epochFrom?: number;\n  epochTo?: number;\n  sort?: SortType;\n  sortOrder?: SortOrder;\n  schedulerName: string;\n  max: number; // -1  for all\n};\n\nexport const makeSearchArgs = (p: SearchParams): string => {\n  let res = `?scheduler-name=${p.schedulerName}`;\n  if (p.scheduleId) {\n    res += `&schedule-id=${p.scheduleId}`;\n  }\n  if (p.max) {\n    res += `&max=${p.max}`;\n  }\n  if (p.sort) {\n    res += `&sort-by=${p.sort} ${p.sortOrder || \"asc\"}`;\n  }\n  if (p.epochFrom) {\n    res += `&epoch-from=${p.epochFrom}`;\n  }\n  if (p.epochTo) {\n    res += `&epoch-to=${p.epochTo}`;\n  }\n  return res;\n};\n\nexport const listAllSchedulers = async (): Promise<Scheduler[]> => {\n  return await get(getSchedulersUrl());\n};\nexport const makeScheduleInfoModel = (schedules: any[]): ScheduleInfo[] => {\n  if (schedules) {\n    return schedules.map((o) => {\n      return {\n        id: o.schedule.id,\n        scheduler: o.scheduler,\n        timestamp: o.schedule.timestamp,\n        epoch: o.schedule.epoch,\n        targetTopic: o.schedule[\"target-topic\"],\n        targetId: o.schedule[\"target-key\"],\n        value: o.schedule.value,\n      };\n    });\n  }\n  return schedules;\n};\n\nexport const makeScheduleModel = ({schedule}: any, schedulerName: string): Schedule => {\n  return {\n    id: schedule.id,\n    scheduler: schedulerName,\n    timestamp: schedule.timestamp,\n    epoch: schedule.epoch,\n    targetTopic: schedule[\"target-topic\"],\n    targetId: schedule[\"target-key\"],\n    value: schedule.value,\n    topic: schedule.topic,\n  };\n};\nexport const searchLiveSchedules = async (p: SearchParams): Promise<ScheduleInfo[]> => {\n  const result: { found: number; schedules: any[] } = await get(getLiveSchedulesUrl(p.schedulerName) + makeSearchArgs(p));\n\n  const res = makeScheduleInfoModel(result.schedules);\n  console.log(res);\n  return res;\n};\nexport const searchSchedules = async (p: SearchParams): Promise<ScheduleInfo[]> => {\n  const result: { found: number; schedules: any[] } = await get(getSchedulesUrl(p.schedulerName) + makeSearchArgs(p));\n  return makeScheduleInfoModel(result.schedules);\n};\nexport const getScheduleDetail = async (schedulerName: string, id: string): Promise<Schedule[]> => {\n  const result: Schedule[] = await get(getScheduleDetailUrl(schedulerName, id));\n\n  if (result.length > 0) {\n    return result.map ( sch => makeScheduleModel(sch, schedulerName));\n  }\n  throw new Error(\"Not found\");\n};\n\nexport const getLiveScheduleDetail = async (schedulerName: string, id: string): Promise<Schedule[]> => {\n  const result: Schedule[] = await get(getLiveScheduleDetailUrl(schedulerName, id));\n\n  if (result.length > 0) {\n    return result.map ( sch => makeScheduleModel(sch, schedulerName));\n  }\n  throw new Error(\"Not found\");\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Appear_enter__3WCKW\",\"enterActive\":\"Appear_enterActive__3_cy6\",\"exit\":\"Appear_exit__1YU6A\",\"exitActive\":\"Appear_exitActive__1vJVi\",\"enterMoreActive\":\"Appear_enterMoreActive__1fVNK\",\"exitMoreActive\":\"Appear_exitMoreActive__OKk_T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Panel\":\"Panel_Panel__1jxoT\",\"Title\":\"Panel_Title__AcpeW\",\"TitleIcon\":\"Panel_TitleIcon__oIazQ\",\"CollapseIcon\":\"Panel_CollapseIcon__1XtgC\"};","import { useEffect, useState } from \"react\";\nimport useRefresh from \"_common/hook/useRefresh\";\nimport { listAllSchedulers } from \"../service/SchedulerService\";\nimport { Scheduler } from \"./../type/index\";\nconst useSchedulers = () => {\n  const [refresh, count] = useRefresh();\n  const [schedulers, setSchedulers] = useState<Scheduler[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  useEffect(() => {\n    setIsLoading(true);\n    (async () => {\n      const res = await listAllSchedulers();\n      setSchedulers(res);\n      setIsLoading(false);\n    })();\n  }, [count]);\n\n  return { schedulers, isLoading, refresh };\n};\n\nexport default useSchedulers;\n","export type BreadcrumbProps = {\n  data: { label: string; url: string }[];\n};\n\nconst Breadcrumb: React.FC<BreadcrumbProps> = ({ data }) => {\n  const len = data.length;\n\n  return (\n    <nav className=\"breadcrumb\" aria-label=\"breadcrumbs\" style={{ marginLeft: \"1rem\" }}>\n      <ul>\n        {data.map((u, index) => {\n          return index < len - 1 ? (\n            <li>\n              <a href={u.url}>{u.label}</a>\n            </li>\n          ) : (\n            <li className=\"is-active\">\n              <a href={u.url}>{u.label}</a>\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n};\n\n\nexport default Breadcrumb;","import clsx from \"clsx\";\nimport Styles from \"./Container.module.css\";\n\nexport type ContainerProps = {\n  title: string;\n  size?: 12 | 10 | 8;\n};\nconst Container: React.FC<ContainerProps> = ({\n  title,\n  size = 12,\n  children,\n}) => {\n  let offset = \"\";\n  if (size === 8) {\n    offset = \"is-offset-2\";\n  } else if (size === 10) {\n    offset = \"is-offset-1\";\n  }\n  return (\n    <div className=\"container\">\n      <div\n        className={clsx(\n          \"column\",\n          size ? \"is-\" + size : null,\n          offset,\n          Styles.Column\n        )}\n      >\n        <h3 className=\"title is-5\">{title}</h3>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Column\":\"Container_Column__3FknH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ColWithId\":\"SchedulerInstanceTable_ColWithId__J4UpZ\",\"ValueField\":\"SchedulerInstanceTable_ValueField__3JRrC\"};"],"sourceRoot":""}